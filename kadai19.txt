【プログラムの説明】
大域変数のint型変数N,int型配列stackを用意。
・init関数
Nを0にしてスタックを初期化。
・push関数
int型変数xを引数にとり、Nがstackの最大許容量以上ならstackoverflowを表示。それ以外ならstackのN番目にxを代入してNをインクリメント。
・pop関数
Nが0以下ならデータがないのでstackunderflowを表示。それ以外ならNをデクリメントし、stackのN番目の数を返す。
・showStack関数
なんか課題の説明文がよくわからないけど、スタックから一個要素を取り出す前と取り出した後を表示する。最後取り出したあともう一回pushするのでスタックに変化はない.
・main関数
スタックを初期化し、テキスト読み取りモードかキーボード入力モードか選択。
　テキスト読み取りモードなら、FILEポインタfpにfopenの読み取りモードで開いたファイルポインタを代入。NULLなら処理終了。
次に、fgetc(fp)で開いたファイルから一文字ずつ入手(cに代入)。ファイルの終わりまで以下を続ける。
cが数字もしくは、一文字前が数字ではなく'-'のとき、cをバッファ配列に格納。バッファ配列のインデックスをインクリメント。
cが上以外のとき、cの内容でswitch-caseする。
cが+のとき、バッファ配列の最後にナル文字を代入して、バッファ配列の2番目の要素からナル文字までを整数に変えてpush。バッファ配列のインデックスを初期化し、二つpopした数を再度push。
なお,バッファ配列の1番目の要素には一番最初に負の数(-)が入力されても対応できるように別の要素が入っており、バッファ配列は2番目からスタートしている。
cが-、*のときは演算が減算、乗算になるだけである。cが/のときは割る数が0でないかだけ判定。
cが.のときはshowStack関数を呼び出す。
cがスペースのときは、特に演算はせず、バッファ配列の最後にナル文字を突っ込んで同じくpush。
最後にpopで結果を表示し、fcloseする。
　キーボード入力モードなら、二度連続でscanfを使うのでストリーム中の\nを除去し、スペース含めてscanned配列に入力を受ける。
残りはscanned配列の1番目の要素から一文字ずつ入手していき、テキスト読み取りモードと同じように動作。
【感想】
すごく雑な感想だが普通に難しかった。というか面倒だった。実際仕事とかでコードを書く時もこんな感じなのだろうか。
具体的には細かいところで引っかかったイメージ。scanfの二連続使用のときはストリームを開放しなければならないことや、atoi関数はナル文字まで読み込むことを失念していたので復習しておく。
ただ、最初が負の数の場合なんかはしっかり実装できたと思うし、成長したと感じる。改行も読み込むscanfは初めて知ったので覚えておく。