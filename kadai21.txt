【プログラムの説明】
課題20からcreate、add、delete関数をそのまま用いている.
ただし、add関数はリスト内に同じ要素があっても要素を追加できるようにした.
・main関数
NODEポインタheaderにHEADをcreateしたアドレスを代入.
add関数でheaderから始まるリストに1から9を順に追加.
NODEポインタpにheaderを代入.
pをnextに9回移動させて、pのnextにheaderのnextを代入して循環リストに.
pの初期を要素4を指すポインタにして、「pがNULLの間pから始まるリストの0番目の次の要素(1番目)を消去、pを4つ先にする」を繰り返す.
【感想】
循環リストの利用例がうまく理解できました.
今回はともかく、今のところリスト構造がどのように役に立っているのかいまいちわからないのでちょっと調べてみようと思いました.
あと少し実装に時間がかかっているので紙に書いたりして,,プログラムがどういう動きをしているのか頭の中だけで考えないように注意します.