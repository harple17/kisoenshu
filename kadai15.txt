【プログラムの説明】
printMoved、bubbleSort、selectSort、insertSortについて説明する。
・printMoved
配列とその長さを引数にとり、for文でループさせて要素が0であれば.を、それ以外なら*を出力。
後に示すソートで移動した部分を表示するために使う。
・bubbleSort
ソートする配列a、その長さsize、printMovedに与えるための記録配列recを引数にとる。
aの初期状態を表示し、0からsize-2まで1ずつ増加するiのforループに入る。また、recを0で初期化。
このループでどこまで二重ループを続けるか決める。
ここで簡略化のためのflagを設置。
二重目のforループでsize-1からi+1まで1ずつ減るjのforループに入る。
aのj番目の要素がj-1番目の要素より小さければ入れ替える。このときrecのj,j-1番目の要素を1にする。
二重目で入れ替えが起きたらflagを1に。ここまでがjのループ。
flagが0、つまり入れ替えが起きなければソート済みとして終了。
printMovedで動いた部分を表示、また回数とその回数におけるソート状況をprintfで表示。
これをiのループで繰り返す。
・selectSort
bubbleSortと同様の引数をとる。
aの初期状態を表示し、0からsize-2まで1ずつ増加するiのforループに入る。また、recを0で初期化。
minadd変数にiを代入。これが最小である要素の番号を示す。
二重目のforループでi+1からsize-1まで1ずつ増加するjのforループに入る。
aのminadd番目の要素よりj番目が小さければminaddをjに変更.ここまでがjのループ。
aのi番目の要素とminadd番目の要素を入れ替え。ここでiとminaddが一致していなければrecのi,minadd番目を1に。
printMovedで動いた部分を表示、また回数とその回数におけるソート状況をprintfで表示。
これをiのループで繰り返す。
・insertSort
bubbleSortと同様の引数をとる。
aの初期状態を表示し、1からsize-1まで1ずつ増加するiのforループに入る。また、recを0で初期化。
aのi番目の要素を記録、この場所にふさわしい要素を探す。
二重目のforループでiから1まで、j-1番目の要素が保存した要素より大きい間は1ずつ減少するjのforループに入る。
aのj番目にj-1番目の要素を代入。ずらしていく。またrecのj,j-1番目の要素を1にする。ここまでがjのループ。
j番目に記録した要素を代入。ここで、iがjと一致していなけらばrecのj番目の要素を1にする。
printMovedで動いた部分を表示、また回数とその回数におけるソート状況をprintfで表示。
これをiのループで繰り返す。
【感想】
ソートの基本が学べた。記録にちょっと工夫が必要で若干手間取ったが、よく考えてみれば割と簡単にできた。
バブルと挿入ソートは並び方によっては短縮が可能だが、選択ソートはよい改善方法が思いつかなかった。あとでネットで調べてみようと思う。
ちょっとオーダーについて興味を持ったのでいろんな(マイナーなやつも)アルゴリズムのオーダーを計算できるようにしておこうと思う。